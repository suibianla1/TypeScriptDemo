type Query {
  getTags(
    offset: Float
    limit: Float
    keyword: String
    state: Float
  ): Tags
}

type Mutation {
  sortTag(ids: [ObjectID]!): Message
  createTag(tagInfo: CreateTagInput!): TagsItem
  updateTag(tagInfo: UpdateTagInput!): TagsItem
  deleteTag(_id: ObjectID!): Message
}

input CreateTagInput {
  name: String!
  descript: String
}

input UpdateTagInput {
  _id: ObjectID!
  name: String
  descript: String
}

type Tags {
  total: Float
  offset: Float!
  limit: Float!
  docs: [TagsItem]
}

type TagsItem {
  _id: ObjectID!
  id: Float
  name: String
  descript: String
  sort: Float
  count: Float
  update_at: Date
  create_at: Date
}

scalar ObjectID